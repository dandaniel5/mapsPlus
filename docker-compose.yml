version: "3"

services:
  nginx:
    image: nginx:1.17
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./public:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    networks:
      - my_network

  certbot:
    image: certbot/certbot
    container_name: certbot
    hostname: certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx
    networks:
      - my_network

  next-app:
    container_name: next-app
    hostname: next-app
    build:
      context: ./front
      dockerfile: Dockerfile

    restart: always
    ports:
      - "3000:3000"
    networks:
      - my_network
    depends_on:
      - api

  mongo3:
    container_name: mongo
    hostname: mongo
    image: mongo
    ports:
      - "27017:27017"
    stdin_open: true
    tty: true
    volumes:
      - ./mongo/data:/data/db
    networks:
      - my_network

  api:
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    container_name: api
    hostname: api
    stdin_open: true
    tty: true
    networks:
      - my_network
    depends_on:
      - mongo3

networks:
  my_network:
    driver: bridge
